// <auto-generated />
using System;
using HackathonLime.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HackathonLime.DAL.Migrations
{
    [DbContext(typeof(HackathonLimeDbContext))]
    [Migration("20231215071157_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HackathonLime.Domain.OnlineCinema.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FilmId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("FilmRaiting")
                        .HasColumnType("double precision");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReleasedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RentalDuration")
                        .HasColumnType("integer");

                    b.Property<double>("RentalRate")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FilmId");

                    b.ToTable("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
